<?xml version='1.0' encoding='utf-8'?>
<agent name='(agMaintainCSS)' xmlns='http://www.lotus.com/dxl' version='9.0'
 maintenanceversion='1.0' replicaid='80257CD2006E18DF' hide='v3' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='44e' unid='E75272188856BF5780257CD2006E65E0' sequence='2'>
<created><datetime dst='true'>20140508T210550,40+01</datetime></created>
<modified><datetime dst='true'>20140508T210550,46+01</datetime></modified>
<revised><datetime dst='true'>20140508T210550,45+01</datetime></revised>
<lastaccessed><datetime dst='true'>20140508T210550,46+01</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20140508T210550,40+01</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Matt White/O=Exhilarate</name></updatedby>
<wassignedby><name>CN=Matt White/O=Exhilarate</name></wassignedby>
<designchange><datetime dst='true'>20130812T090923,13+01</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM
	Agent agMaintainLanguages
	Created Mar 3, 2010 by Matt White/Exhilarate
	Description: Comments for Agent
%END REM
Option Public
Option Declare
Use "OpenLogFunctions"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize()
	On Error GoTo err_init
	Dim session As New NotesSession
	Dim dbCurrent As NotesDatabase 
	Dim context As NotesDocument 
	Dim attachments As Variant 
	Dim i As Integer 
	Dim agent As NotesAgent
	
	Set dbCurrent = session.currentDatabase
	Set agent = session.Currentagent
	Set context = dbCurrent.Getdocumentbyid(agent.parameterdocid) 
	
	'Now create a text file to import later on
	Dim directory As String
	directory = session.GetEnvironmentString("Directory", True) 
	If InStr(directory, "\") &lt;&gt; 0 And Left(directory, 1) &lt;&gt; "\" Then directory = directory &amp; "\" 
	If InStr(directory, "/") &lt;&gt; 0 And Left(directory, 1) &lt;&gt; "/" Then directory = directory &amp; "/" 
	If InStr(directory, "\") &lt;&gt; 0 Then directory = directory &amp; "\" Else directory = directory &amp; "/"
	
	Dim fileName As String
	fileName$ = context.filename(0)
	
	Dim item As NotesRichTextItem
	Set item = context.Getfirstitem("Value")
	
	Dim rtNav As NotesRichTextNavigator
	Set rtnav = item.CreateNavigator
	Dim searchString As String
	Dim replaceString As String
	
	Dim pos As Integer
	For pos = LBound(context.fieldnames) To UBound(context.fieldnames)
		searchString = context.fieldnames(pos)
		Dim fieldvalue As NotesItem
		Set fieldvalue = context.GetFirstItem(context.fieldvalues(pos))
		Call logEvent("Getting field " + context.fieldvalues(pos), SEVERITY_LOW, context)
		replaceString = fieldvalue.text
		Call rtnav.FindFirstElement(RTELEM_TYPE_TEXTPARAGRAPH)
		Dim rtrange As NotesRichTextRange
		Set rtrange = item.CreateRange
		Dim count As Integer
		count = rtrange.FindAndReplace(searchString$, replaceString$, RT_REPL_ALL + RT_FIND_CASEINSENSITIVE)
	Next pos
	
	
	If item.Text &lt;&gt; "" Then
		Dim outStream As NotesStream
		Set outStream = session.Createstream()
		If outStream.open(directory + fileName, "ASCII") Then
	        If outStream.bytes &gt; 0 Then
				outStream.truncate
	        End If
	        outStream.writeText(item.getFormattedText(False, 255))
	        outStream.close
	    End If
		
		
		'Now get into the DXL goodness
		Dim tempDoc As NotesDocument
		Dim entity As NotesMIMEEntity
		Dim fileSize As Long 
		Set tempDoc = dbCurrent.CreateDocument 
		Call CreateMIMEEntity(session, directory &amp; fileName, tempDoc, entity, fileSize)
		Call CreateDXLFile(session, directory &amp; fileName, entity, fileSize)
		Call ImportDXLFile(session, directory &amp; fileName, dbCurrent)
		 
		Kill directory &amp; fileName
		Kill directory &amp; StrLeftBack(fileName, ".") &amp; ".dxl"
	Else
		Call logEvent("There were no language variables to update", SEVERITY_LOW, context)
	End If 
	
	Exit Sub
err_init:
	Call logError()
	Exit Sub	 
End Sub

</lotusscript></code><code event='CreateMIMEEntity'><lotusscript>
Sub CreateMIMEEntity(session As NotesSession, filePath As String, tempDoc As NotesDocument, entity As NotesMIMEEntity, fileSize As Long)
	On Error GoTo err_createmime 
   Dim stream As NotesStream 
    
   Set stream = session.CreateStream 
   If Not stream.Open(filePath) Then 
      Error 4000, "Cannot open file " &amp; filePath &amp; " for processing." 
   End If 
    
   fileSize = stream.Bytes 
    
   Call tempDoc.ReplaceItemValue("Form", "Temporary Document") 
   Set entity = tempDoc.CreateMIMEEntity 
   Call entity.SetContentFromBytes(stream, "text/plain", ENC_NONE) 
   Call entity.EncodeContent(ENC_BASE64) 
   Call stream.Close
   
   Exit Sub
   
err_createmime:
   Call logError()
   Exit Sub 
End Sub

</lotusscript></code><code event='CreateDXLFile'><lotusscript> 
Sub CreateDXLFile(session As NotesSession, filePath As String, entity As NotesMIMEEntity, fileSize As Long)
	On Error GoTo err_createdxl 
   Dim stream As NotesStream 
   Dim directory As String 
   Dim fileName As String 
    
   If InStr(filePath, "\") &lt;&gt; 0 Then 
      directory = StrLeftBack(filePath, "\") &amp; "\" 
      fileName = StrRightBack(filePath, "\") 
   Else 
      directory = StrLeftBack(filePath, "/") &amp; "/" 
      fileName = StrRightBack(filePath, "/") 
   End If 
    
   Set stream = session.CreateStream 
   If Not stream.Open(directory &amp; StrLeftBack(fileName, ".") &amp; ".dxl", "ISO-8859-1") Then 
      Error 4001, "Cannot create file " &amp; directory &amp; StrLeftBack(fileName, ".") &amp; ".dxl on the server." 
   End If 
   Call stream.WriteText({&lt;?xml version='1.0' encoding='utf-8'?&gt;}) 
   Call stream.WriteText({&lt;stylesheetresource name='} &amp; fileName &amp; {'}) 
   Call stream.WriteText({ noreplace='false' publicaccess='false' designerversion='8'&gt;}) 
   Call stream.WriteText({&lt;filedata&gt;}) 
   Call stream.WriteText(entity.ContentAsText) 
   Call stream.WriteText({&lt;/filedata&gt;}) 
   Call stream.WriteText({&lt;item name='$FileSize' sign='true'&gt;&lt;numberlist&gt;&lt;number&gt;}) 
   Call stream.WriteText(CStr(fileSize) &amp; {&lt;/number&gt;&lt;/numberlist&gt;&lt;/item&gt;}) 
   Call stream.WriteText({&lt;item name='$FileModDT' sign='true'&gt;&lt;datetimelist&gt;&lt;datetime&gt;}) 
   Call stream.WriteText(Format$(Now, "YYYYMMDD") &amp; "T" &amp; Format$(Now, "HHMMSS") &amp; ",00-00") 
   Call stream.WriteText({&lt;/datetime&gt;&lt;/datetimelist&gt;&lt;/item&gt;}) 
   Call stream.WriteText({&lt;/stylesheetresource&gt;}) 
   Call stream.Close
   
   Exit Sub
err_createdxl:
   Call logError()
   Exit Sub 
End Sub 

</lotusscript></code><code event='ImportDXLFile'><lotusscript>
Sub ImportDXLFile(session As NotesSession, filePath As String, db As NotesDatabase)
	On Error GoTo err_import 
   Dim stream As NotesStream 
   Dim importer As NotesDXLImporter 
   Dim dxlPath As String 
    
   dxlPath = StrLeftBack(filePath, ".") &amp; ".dxl" 
   Set stream = session.CreateStream 
   If Not stream.Open(dxlPath, "ISO-8859-1") Then 
      Error 4002, "Cannot open file " &amp; dxlPath &amp; " after it was created." 
   End If 
   Set importer = session.CreateDXLImporter(stream, db) 
   importer.ReplaceDBProperties = False 
   importer.ReplicaRequiredForReplaceOrUpdate = False 
   importer.DesignImportOption = DXLIMPORTOPTION_REPLACE_ELSE_CREATE  
   Call importer.Process 
   Call stream.Close
   
   Exit Sub
err_import:
   Call LogError()
   Exit Sub 
End Sub </lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='2BB93C3B6722BA8E80257BA500480EEC'>
<agentmodified><datetime dst='true'>20130812T090925,14+01</datetime></agentmodified>
<agentrun><datetime dst='true'>20130905T084656,31+01</datetime></agentrun>
<runlog>Started running agent 'agMaintainCSS' on 05/09/2013 08:46:55
Ran LotusScript code
Done running agent 'agMaintainCSS' on 05/09/2013 08:46:56
</runlog></rundata></agent>

